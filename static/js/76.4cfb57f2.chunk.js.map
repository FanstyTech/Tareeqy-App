{"version":3,"sources":["components/HeaderBreadcrumbs.js","components/SearchNotFound.js","components/LightboxModal.js","components/EmojiPicker.js","utils/getFileFormat.js","components/_dashboard/chat/ChatAccount.js","components/_dashboard/chat/ChatContactSearch.js","components/_dashboard/chat/ChatConversationItem.js","components/_dashboard/chat/ChatConversationList.js","components/_dashboard/chat/ChatHeaderCompose.js","components/_dashboard/chat/ChatHeaderDetail.js","components/_dashboard/chat/ChatMessageInput.js","components/_dashboard/chat/ChatMessageItem.js","components/_dashboard/chat/ChatMessageList.js","components/_dashboard/chat/ChatRoomAttachment.js","components/_dashboard/chat/ChatRoomOneParticipant.js","components/_dashboard/chat/ChatRoomPopup.js","components/_dashboard/chat/ChatRoomGroupParticipant.js","components/_dashboard/chat/ChatRoom.js","components/_dashboard/chat/ChatSearchResults.js","components/_dashboard/chat/ChatSidebar.js","components/_dashboard/chat/ChatWindow.js","pages/dashboard/Chat.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","SearchNotFound","searchQuery","align","useStyles","makeStyles","theme","isRTL","direction","backgroundIcon","iconName","backgroundSize","backgroundPosition","backgroundRepeat","backgroundColor","alpha","palette","grey","backgroundImage","createStyles","root","backdropFilter","height","padding","spacing","width","justifyContent","marginLeft","borderRadius","shape","outline","borderRadiusSm","left","right","LightboxModal","images","photoIndex","setPhotoIndex","isOpen","onClose","classes","useEffect","document","body","style","overflow","toolbarButtons","length","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","wrapperClassName","RootStyle","styled","position","PickerStyle","bottom","boxShadow","customShadows","z20","borderRadiusMd","border","background","paper","color","text","disabled","primary","borderColor","divider","typography","body2","opacity","fill","subtitle2","WebkitBackdropFilter","selected","secondary","EmojiPicker","emojiPicker","value","setValue","alignRight","useTheme","useState","emojiPickerState","SetEmojiPicker","main","title","emoji","onSelect","native","onClickAway","size","onClick","e","preventDefault","icon","smilingFaceFill","FORMAT_IMG","FORMAT_VIDEO","FORMAT_WORD","FORMAT_EXCEL","FORMAT_POWERPOINT","FORMAT_PDF","FORMAT_PHOTOSHOP","FORMAT_ILLUSTRATOR","getFileType","fileUrl","split","pop","getFileName","substring","lastIndexOf","replace","getFileFullName","getIcon","name","component","src","alt","getFileThumb","thumb","format","includes","getFileFormat","Icon","fileFill","STATUS","ChatAccount","user","useAuth","open","setOpen","status","setStatus","Box","MyAvatar","event","currentTarget","cursor","BadgeStatus","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","py","pr","pl","ml","mr","Typography","displayName","email","Tooltip","IconButton","roundPowerSettingsNew","Divider","List","ListItem","disableGutters","px","ListItemIcon","ListItemText","Select","fullWidth","onChange","bgcolor","borderWidth","option","capitalCase","ListItemButton","roundAccountBox","primaryTypographyProps","settings2Fill","marginTop","SearchStyle","OutlinedInput","transition","transitions","create","easing","easeInOut","duration","shorter","z8","ChatContactSearch","query","onFocus","ClickAwayListener","FormControl","placeholder","startAdornment","InputAdornment","searchFill","AvatarWrapperStyle","ChatConversationItem","isSelected","conversation","onSelectConversation","isOpenSidebar","details","currentUserId","otherParticipants","participants","filter","participant","id","displayNames","reduce","names","join","displayText","lastMessage","messages","sender","senderId","message","contentType","getDetails","displayLastActivity","last","createdAt","isGroup","isUnread","unreadCount","isOnlineGroup","item","ListItemAvatar","top","slice","className","Avatar","avatar","secondaryTypographyProps","flexDirection","fontSize","lineHeight","whiteSpace","formatDistanceToNowStrict","Date","addSuffix","ChatConversationList","conversations","activeConversationId","navigate","useNavigate","disablePadding","allIds","conversationId","byId","conversationKey","type","find","username","PATH_DASHBOARD","chat","handleSelectConversation","AutocompleteStyle","minWidth","ChatHeaderCompose","contacts","recipients","onAddRecipient","setQuery","Autocomplete","multiple","disablePortal","popupIcon","clearText","noOptionsText","recipient","onInputChange","options","getOptionLabel","renderOption","props","inputValue","matches","match","parts","parse","checkmarkFill","part","index","highlight","renderTags","getTagProps","Chip","label","renderInput","params","TextField","minHeight","OneAvatar","undefined","fToNow","lastActivity","GroupAvatar","AvatarGroup","max","Link","underline","arrowIosForwardFill","ChatHeaderDetail","phoneFill","videoFill","moreVerticalFill","paddingLeft","ChatMessageInput","onSend","fileInputRef","useRef","setMessage","handleAttach","current","click","handleSend","messageId","uuidv4","attachments","Input","disableUnderline","onKeyUp","key","endAdornment","Stack","roundAddPhotoAlternate","attach2Fill","micFill","orientation","flexItem","mx","roundSend","ref","marginBottom","ContentStyle","maxWidth","neutral","InfoStyle","MessageImgStyle","objectFit","ChatMessageItem","onOpenLightbox","senderDetails","isMe","isImage","firstName","ChatMessageList","scrollRef","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","scrollTop","scrollHeight","handleOpenLightbox","url","findIndex","Scrollbar","scrollableNodeProps","p","paddingBottom","FileItemStyle","FileThumbStyle","CollapseButtonStyle","Button","overline","AttachmentItem","file","fDateTime","ChatRoomAttachment","isCollapse","onCollapse","totalAttachment","uniq","flatten","endIcon","arrowIosDownwardFill","Collapse","in","RowIconStyle","RowTextStyle","wordWrap","ChatRoomOneParticipant","pt","pb","textAlign","pinFill","address","phone","emailFill","RowStyle","IconStyle","marginRight","ChatRoomPopup","DialogContent","paragraph","Participant","onClosePopup","onShowPopup","ChatRoomGroupParticipant","selectUserId","onShowPopupUserInfo","disableRipple","HEIGHT","borderLeft","ToggleButtonStyle","borderRight","borderTopLeftRadius","borderBottomLeftRadius","ChatRoom","isMobile","useMediaQuery","breakpoints","down","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","arrowIosBackFill","participantId","prev","ChatSearchResults","results","onSelectContact","isFound","result","ChatSidebar","setSearchQuery","searchResults","setSearchResults","isSearchFocused","setSearchFocused","displayResults","useSelector","state","handleChangeSearch","axios","get","response","data","console","error","handleSearchSelect","to","new","RouterLink","editFill","ChatWindow","dispatch","useDispatch","pathname","useLocation","useParams","unreadMessages","conversationSelector","mode","displayParticipants","a","getParticipants","getConversation","resetActiveConversation","markConversationAsRead","handleSendMessage","onSendMessage","Object","values","addRecipients","Chat","themeStretch","useSettings","getConversations","getContacts","Page","Container","Card"],"mappings":"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","file":"static/js/76.4cfb57f2.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { Paper, Typography } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nSearchNotFound.propTypes = {\n  searchQuery: PropTypes.string\n};\n\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\n  return (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        لا يوجد نتائج\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        لا يوجد نتائج ل &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. حاول التحقق من الأخطاء المطبعية أو استخدام كلمات كاملة.\n      </Typography>\n    </Paper>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport Lightbox from 'react-image-lightbox';\n// material\nimport { makeStyles, createStyles } from '@material-ui/styles';\nimport { alpha } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst useStyles = makeStyles((theme) => {\n  const isRTL = theme.direction === 'rtl';\n\n  const backgroundIcon = (iconName) => ({\n    backgroundSize: '24px 24px',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: alpha(theme.palette.grey[900], 0.8),\n    backgroundImage: `url(\"/static/icons/controls/${iconName}.svg\")`\n  });\n\n  return createStyles({\n    root: {\n      backdropFilter: 'blur(8px)',\n      backgroundColor: alpha(theme.palette.grey[900], 0.88),\n\n      // Toolbar\n      '& .ril__toolbar': {\n        height: 'auto !important',\n        padding: theme.spacing(2, 3),\n        backgroundColor: 'transparent'\n      },\n      '& .ril__toolbarLeftSide': { display: 'none' },\n      '& .ril__toolbarRightSide': {\n        height: 'auto !important',\n        padding: 0,\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n        '& li': {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        '& li:first-of-type': {\n          flexGrow: 1\n        },\n        '& li:not(:first-of-type)': {\n          width: theme.spacing(5),\n          height: theme.spacing(5),\n          justifyContent: 'center',\n          marginLeft: theme.spacing(1),\n          borderRadius: theme.shape.borderRadius\n        }\n      },\n\n      // Button\n      '& button:focus': { outline: 'none' },\n      '& .ril__toolbarRightSide button': {\n        width: '100%',\n        height: '100%',\n        '&.ril__zoomInButton': backgroundIcon('maximize-outline'),\n        '&.ril__zoomOutButton': backgroundIcon('minimize-outline'),\n        '&.ril__closeButton': backgroundIcon('close')\n      },\n      '& .ril__navButtons': {\n        padding: theme.spacing(3),\n        borderRadius: theme.shape.borderRadiusSm,\n        '&.ril__navButtonPrev': {\n          left: theme.spacing(2),\n          right: 'auto',\n          ...backgroundIcon(isRTL ? 'arrow-ios-forward' : 'arrow-ios-back')\n        },\n        '&.ril__navButtonNext': {\n          right: theme.spacing(2),\n          left: 'auto',\n          ...backgroundIcon(isRTL ? 'arrow-ios-back' : 'arrow-ios-forward')\n        }\n      }\n    }\n  });\n});\n\n// ----------------------------------------------------------------------\n\nLightboxModal.propTypes = {\n  images: PropTypes.array.isRequired,\n  photoIndex: PropTypes.number,\n  setPhotoIndex: PropTypes.func,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func\n};\n\nexport default function LightboxModal({ images, photoIndex, setPhotoIndex, isOpen, onClose, ...other }) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n  }, [isOpen]);\n\n  const showIndex = <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>;\n\n  const toolbarButtons = [showIndex];\n  const customStyles = {\n    overlay: {\n      zIndex: 9999\n    }\n  };\n\n  return (\n    <>\n      {isOpen && (\n        <Lightbox\n          mainSrc={images[photoIndex]}\n          nextSrc={images[(photoIndex + 1) % images.length]}\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n          onCloseRequest={onClose}\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\n          toolbarButtons={toolbarButtons}\n          reactModalStyle={customStyles}\n          wrapperClassName={classes.root}\n          {...other}\n        />\n      )}\n    </>\n  );\n}\n","import 'emoji-mart/css/emoji-mart.css';\nimport PropTypes from 'prop-types';\nimport { Picker } from 'emoji-mart';\nimport { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport smilingFaceFill from '@iconify/icons-eva/smiling-face-fill';\n// material\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\nimport { IconButton, ClickAwayListener } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')({\n  position: 'relative'\n});\n\nconst PickerStyle = styled('div')(({ theme }) => ({\n  bottom: 40,\n  overflow: 'hidden',\n  position: 'absolute',\n  left: theme.spacing(-2),\n  boxShadow: theme.customShadows.z20,\n  borderRadius: theme.shape.borderRadiusMd,\n  '& .emoji-mart': {\n    border: 'none',\n    backgroundColor: theme.palette.background.paper\n  },\n  '& .emoji-mart-anchor': {\n    color: theme.palette.text.disabled,\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\n      color: theme.palette.text.primary\n    }\n  },\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\n  '& .emoji-mart-search input': {\n    backgroundColor: 'transparent',\n    color: theme.palette.text.primary,\n    borderColor: theme.palette.grey[500_32],\n    '&::placeholder': {\n      ...theme.typography.body2,\n      color: theme.palette.text.disabled\n    }\n  },\n  '& .emoji-mart-search-icon svg': {\n    opacity: 1,\n    fill: theme.palette.text.disabled\n  },\n  '& .emoji-mart-category-label span': {\n    ...theme.typography.subtitle2,\n    backdropFilter: 'blur(8px)',\n    WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\n    color: theme.palette.text.primary,\n    backgroundColor: alpha(theme.palette.background.paper, 0.8)\n  },\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\n    backgroundColor: theme.palette.action.selected\n  },\n  '& .emoji-mart-emoji': { outline: 'none' },\n  '& .emoji-mart-preview-name': {\n    color: theme.palette.text.primary\n  },\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\n    color: theme.palette.text.secondary\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nEmojiPicker.propTypes = {\n  disabled: PropTypes.bool,\n  value: PropTypes.string,\n  setValue: PropTypes.func,\n  alignRight: PropTypes.bool\n};\n\nexport default function EmojiPicker({ disabled, value, setValue, alignRight = false, ...other }) {\n  const theme = useTheme();\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\n\n  let emojiPicker;\n  if (emojiPickerState) {\n    emojiPicker = (\n      <Picker\n        color={theme.palette.primary.main}\n        title=\"Pick your emoji…\"\n        emoji=\"point_up\"\n        onSelect={(emoji) => setValue(value + emoji.native)}\n      />\n    );\n  }\n\n  const triggerPicker = (e) => {\n    e.preventDefault();\n    SetEmojiPicker(!emojiPickerState);\n  };\n\n  const handleClickAway = () => {\n    SetEmojiPicker(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n      <RootStyle {...other}>\n        <PickerStyle\n          sx={{\n            ...(alignRight && {\n              right: -2,\n              left: 'auto !important'\n            })\n          }}\n        >\n          {emojiPicker}\n        </PickerStyle>\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\n          <Icon icon={smilingFaceFill} width={20} height={20} />\n        </IconButton>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","// material\nimport { Box } from '@material-ui/core';\n//\nimport { Icon } from '@iconify/react';\nimport fileFill from '@iconify/icons-eva/file-fill';\n\n// ----------------------------------------------------------------------\n\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\nconst FORMAT_WORD = ['doc', 'docx'];\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\nconst FORMAT_PDF = ['pdf'];\nconst FORMAT_PHOTOSHOP = ['psd'];\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\n\nexport function getFileType(fileUrl) {\n  return fileUrl.split('.').pop();\n}\n\nexport function getFileName(fileUrl) {\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\n}\n\nexport function getFileFullName(fileUrl) {\n  return fileUrl.split('/').pop();\n}\n\nexport function getFileFormat(fileUrl) {\n  let format;\n\n  switch (fileUrl.includes(getFileType(fileUrl))) {\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\n      format = 'image';\n      break;\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\n      format = 'video';\n      break;\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\n      format = 'word';\n      break;\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\n      format = 'excel';\n      break;\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\n      format = 'powerpoint';\n      break;\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\n      format = 'pdf';\n      break;\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\n      format = 'photoshop';\n      break;\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\n      format = 'illustrator';\n      break;\n    default:\n      format = getFileType(fileUrl);\n  }\n\n  return format;\n}\n\nconst getIcon = (name) => (\n  <Box component=\"img\" src={`/static/icons/file/${name}.svg`} alt={name} sx={{ width: 28, height: 28 }} />\n);\n\nexport function getFileThumb(fileUrl) {\n  let thumb;\n  switch (getFileFormat(fileUrl)) {\n    case 'image':\n      thumb = <Box component=\"img\" src={fileUrl} alt={fileUrl} sx={{ width: 1, height: 1 }} />;\n      break;\n    case 'video':\n      thumb = getIcon('file_type_video');\n      break;\n    case 'word':\n      thumb = getIcon('file_type_word');\n      break;\n    case 'excel':\n      thumb = getIcon('file_type_excel');\n      break;\n    case 'powerpoint':\n      thumb = getIcon('file_type_powerpoint');\n      break;\n    case 'pdf':\n      thumb = getIcon('file_type_pdf');\n      break;\n    case 'photoshop':\n      thumb = getIcon('file_type_photoshop');\n      break;\n    case 'illustrator':\n      thumb = getIcon('file_type_ai');\n      break;\n    default:\n      thumb = <Box component={Icon} icon={fileFill} sx={{ width: 28, height: 28 }} />;\n  }\n  return thumb;\n}\n","import { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport { capitalCase } from 'change-case';\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\nimport roundAccountBox from '@iconify/icons-ic/round-account-box';\nimport roundPowerSettingsNew from '@iconify/icons-ic/round-power-settings-new';\n// material\nimport {\n  Box,\n  List,\n  Select,\n  Divider,\n  Popover,\n  Tooltip,\n  ListItem,\n  Typography,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  ListItemButton\n} from '@material-ui/core';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\n//\nimport MyAvatar from '../../MyAvatar';\nimport BadgeStatus from '../../BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst STATUS = ['online', 'invisible', 'away'];\n\nexport default function ChatAccount() {\n  const { user } = useAuth();\n  const [open, setOpen] = useState(null);\n  const [status, setStatus] = useState('online');\n\n  const handleOpen = (event) => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  const handleChangeStatus = (event) => {\n    setStatus(event.target.value);\n  };\n\n  return (\n    <>\n      <Box sx={{ position: 'relative' }}>\n        <MyAvatar onClick={handleOpen} sx={{ cursor: 'pointer', width: 48, height: 48 }} />\n        <BadgeStatus status={status} sx={{ position: 'absolute', bottom: 2, right: 2 }} />\n      </Box>\n\n      <Popover\n        open={Boolean(open)}\n        anchorEl={open}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n      >\n        <Box\n          sx={{\n            py: 2,\n            pr: 1,\n            pl: 2.5,\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <MyAvatar />\n\n          <Box sx={{ ml: 2, mr: 3 }}>\n            <Typography noWrap variant=\"subtitle1\">\n              {user.displayName}\n            </Typography>\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              {user.email}\n            </Typography>\n          </Box>\n\n          <Tooltip title=\"Log out\">\n            <IconButton>\n              <Icon icon={roundPowerSettingsNew} width={24} height={24} />\n            </IconButton>\n          </Tooltip>\n        </Box>\n\n        <Divider />\n\n        <List>\n          <ListItem disableGutters sx={{ py: 1, px: 2.5 }}>\n            <ListItemIcon>\n              <Box\n                sx={{\n                  width: 24,\n                  height: 24,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}\n              >\n                <BadgeStatus status={status} />\n              </Box>\n            </ListItemIcon>\n            <ListItemText>\n              <Select\n                native\n                fullWidth\n                size=\"small\"\n                value={status}\n                onChange={handleChangeStatus}\n                sx={{\n                  '& svg': { display: `none` },\n                  '& select': {\n                    padding: 0,\n                    typography: 'body2',\n                    '&:focus': { bgcolor: 'transparent' }\n                  },\n                  '& fieldset': { borderWidth: `0 !important` }\n                }}\n              >\n                {STATUS.map((option) => (\n                  <option key={option} value={option}>\n                    {capitalCase(option)}\n                  </option>\n                ))}\n              </Select>\n            </ListItemText>\n          </ListItem>\n\n          <ListItemButton disableGutters sx={{ py: 1, px: 2.5 }}>\n            <ListItemIcon>\n              <Icon icon={roundAccountBox} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Profile\"\n              primaryTypographyProps={{\n                variant: 'body2'\n              }}\n            />\n          </ListItemButton>\n\n          <ListItemButton disableGutters sx={{ py: 1, px: 2.5 }}>\n            <ListItemIcon>\n              <Icon icon={settings2Fill} width={24} height={24} />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Settings\"\n              primaryTypographyProps={{\n                variant: 'body2'\n              }}\n            />\n          </ListItemButton>\n        </List>\n      </Popover>\n    </>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, FormControl, OutlinedInput, InputAdornment, ClickAwayListener } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  marginTop: theme.spacing(2)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  transition: theme.transitions.create('box-shadow', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nChatContactSearch.propTypes = {\n  query: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onClickAway: PropTypes.func\n};\n\nexport default function ChatContactSearch({ query, onChange, onFocus, onClickAway, ...other }) {\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <RootStyle {...other}>\n        <FormControl fullWidth size=\"small\">\n          <SearchStyle\n            value={query}\n            onFocus={onFocus}\n            onChange={onChange}\n            placeholder=\"Search contacts...\"\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </RootStyle>\n    </ClickAwayListener>\n  );\n}\n","import { last } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Avatar, ListItemText, ListItemAvatar, ListItemButton } from '@material-ui/core';\n//\nimport BadgeStatus from '../../BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst AVATAR_SIZE = 48;\nconst AVATAR_SIZE_GROUP = 32;\n\nconst RootStyle = styled(ListItemButton)(({ theme }) => ({\n  padding: theme.spacing(1.5, 3),\n  transition: theme.transitions.create('all')\n}));\n\nconst AvatarWrapperStyle = styled('div')({\n  position: 'relative',\n  width: AVATAR_SIZE,\n  height: AVATAR_SIZE,\n  '& .MuiAvatar-img': { borderRadius: '50%' },\n  '& .MuiAvatar-root': { width: '100%', height: '100%' }\n});\n\n// ----------------------------------------------------------------------\n\nconst getDetails = (conversation, currentUserId) => {\n  const otherParticipants = conversation.participants.filter((participant) => participant.id !== currentUserId);\n  const displayNames = otherParticipants.reduce((names, participant) => [...names, participant.name], []).join(', ');\n  let displayText = '';\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n  if (lastMessage) {\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\n    displayText = `${sender}${message}`;\n  }\n  return { otherParticipants, displayNames, displayText };\n};\n\nChatConversationItem.propTypes = {\n  isSelected: PropTypes.bool,\n  conversation: PropTypes.object.isRequired,\n  isOpenSidebar: PropTypes.bool,\n  onSelectConversation: PropTypes.func\n};\n\nexport default function ChatConversationItem({\n  isSelected,\n  conversation,\n  onSelectConversation,\n  isOpenSidebar,\n  ...other\n}) {\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  const displayLastActivity = last(conversation.messages).createdAt;\n  const isGroup = details.otherParticipants.length > 1;\n  const isUnread = conversation.unreadCount > 0;\n  const isOnlineGroup = isGroup && details.otherParticipants.map((item) => item.status).includes('online');\n\n  return (\n    <RootStyle\n      disableGutters\n      onClick={onSelectConversation}\n      sx={{\n        ...(isSelected && { bgcolor: 'action.selected' })\n      }}\n      {...other}\n    >\n      <ListItemAvatar>\n        <Box\n          sx={{\n            ...(isGroup && {\n              position: 'relative',\n              width: AVATAR_SIZE,\n              height: AVATAR_SIZE,\n              '& .avatarWrapper': {\n                position: 'absolute',\n                width: AVATAR_SIZE_GROUP,\n                height: AVATAR_SIZE_GROUP,\n                '&:nth-of-type(1)': {\n                  left: 0,\n                  zIndex: 9,\n                  bottom: 2,\n                  '& .MuiAvatar-root': {\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`\n                  }\n                },\n                '&:nth-of-type(2)': { top: 2, right: 0 }\n              }\n            })\n          }}\n        >\n          {details.otherParticipants.slice(0, 2).map((participant) => (\n            <AvatarWrapperStyle className=\"avatarWrapper\" key={participant.id}>\n              <Avatar alt={participant.name} src={participant.avatar} />\n              {!isGroup && (\n                <BadgeStatus status={participant.status} sx={{ right: 2, bottom: 2, position: 'absolute' }} />\n              )}\n            </AvatarWrapperStyle>\n          ))}\n          {isOnlineGroup && <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />}\n        </Box>\n      </ListItemAvatar>\n\n      {isOpenSidebar && (\n        <>\n          <ListItemText\n            primary={details.displayNames}\n            primaryTypographyProps={{\n              noWrap: true,\n              variant: 'subtitle2'\n            }}\n            secondary={details.displayText}\n            secondaryTypographyProps={{\n              noWrap: true,\n              variant: isUnread ? 'subtitle2' : 'body2',\n              color: isUnread ? 'textPrimary' : 'textSecondary'\n            }}\n          />\n\n          <Box\n            sx={{\n              ml: 2,\n              height: 44,\n              display: 'flex',\n              alignItems: 'flex-end',\n              flexDirection: 'column'\n            }}\n          >\n            <Box\n              sx={{\n                mb: 1.25,\n                fontSize: 12,\n                lineHeight: '22px',\n                whiteSpace: 'nowrap',\n                color: 'text.disabled'\n              }}\n            >\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\n                addSuffix: false\n              })}\n            </Box>\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\n          </Box>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n// material\nimport { List } from '@material-ui/core';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport ChatConversationItem from './ChatConversationItem';\n\n// ----------------------------------------------------------------------\n\nChatConversationList.propTypes = {\n  conversations: PropTypes.object,\n  isOpenSidebar: PropTypes.bool,\n  activeConversationId: PropTypes.string\n};\n\nexport default function ChatConversationList({ conversations, isOpenSidebar, activeConversationId, ...other }) {\n  const navigate = useNavigate();\n\n  const handleSelectConversation = (conversationId) => {\n    let conversationKey = '';\n    const conversation = conversations.byId[conversationId];\n    if (conversation.type === 'GROUP') {\n      conversationKey = conversation.id;\n    } else {\n      const otherParticipant = conversation.participants.find(\n        (participant) => participant.id !== '8864c717-587d-472a-929a-8e5f298024da-0'\n      );\n      conversationKey = otherParticipant.username;\n    }\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\n  };\n\n  return (\n    <List disablePadding {...other}>\n      {conversations.allIds.map((conversationId) => (\n        <ChatConversationItem\n          key={conversationId}\n          isOpenSidebar={isOpenSidebar}\n          conversation={conversations.byId[conversationId]}\n          isSelected={activeConversationId === conversationId}\n          onSelectConversation={() => handleSelectConversation(conversationId)}\n        />\n      ))}\n    </List>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\n// material\nimport { alpha, styled } from '@material-ui/core/styles';\nimport { Box, Avatar, TextField, Typography, Autocomplete, Chip } from '@material-ui/core';\n//\nimport SearchNotFound from '../../SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 3)\n}));\n\nconst AutocompleteStyle = styled('div')(({ theme }) => ({\n  '& .MuiAutocomplete-root': {\n    minWidth: 280,\n    marginLeft: theme.spacing(2),\n    '&.Mui-focused .MuiAutocomplete-inputRoot': {\n      boxShadow: theme.customShadows.z8\n    }\n  },\n  '& .MuiAutocomplete-inputRoot': {\n    transition: theme.transitions.create('box-shadow', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shorter\n    }),\n    '& fieldset': {\n      borderWidth: `1px !important`,\n      borderColor: `${theme.palette.grey[500_32]} !important`\n    }\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nChatHeaderCompose.propTypes = {\n  contacts: PropTypes.array,\n  recipients: PropTypes.array,\n  onAddRecipient: PropTypes.func\n};\n\nexport default function ChatHeaderCompose({ contacts, recipients, onAddRecipient, ...other }) {\n  const [query, setQuery] = useState('');\n\n  const handleChangeQuery = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleAddRecipient = (e, recipient) => {\n    setQuery('');\n    if (onAddRecipient) {\n      onAddRecipient(recipient);\n    }\n  };\n\n  return (\n    <RootStyle {...other}>\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n        To:\n      </Typography>\n\n      <AutocompleteStyle>\n        <Autocomplete\n          multiple\n          size=\"small\"\n          disablePortal\n          popupIcon={null}\n          clearText={null}\n          noOptionsText={<SearchNotFound searchQuery={query} />}\n          onChange={handleAddRecipient}\n          onInputChange={handleChangeQuery}\n          options={contacts}\n          getOptionLabel={(recipient) => recipient.name}\n          renderOption={(props, recipient, { inputValue, selected }) => {\n            const { name, avatar } = recipient;\n            const matches = match(name, inputValue);\n            const parts = parse(name, matches);\n            return (\n              <li {...props}>\n                <Box\n                  sx={{\n                    width: 32,\n                    height: 32,\n                    overflow: 'hidden',\n                    borderRadius: '50%',\n                    position: 'relative'\n                  }}\n                >\n                  <Avatar alt={name} src={avatar} />\n                  <Box\n                    sx={{\n                      top: 0,\n                      opacity: 0,\n                      width: '100%',\n                      height: '100%',\n                      display: 'flex',\n                      position: 'absolute',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\n                      transition: (theme) =>\n                        theme.transitions.create('opacity', {\n                          easing: theme.transitions.easing.easeInOut,\n                          duration: theme.transitions.duration.shorter\n                        }),\n                      ...(selected && {\n                        opacity: 1,\n                        color: 'primary.main'\n                      })\n                    }}\n                  >\n                    <Icon icon={checkmarkFill} width={20} height={20} />\n                  </Box>\n                </Box>\n                <Box sx={{ ml: 2 }} />\n                {parts.map((part, index) => (\n                  <Typography key={index} variant=\"subtitle2\" color={part.highlight ? 'primary' : 'textPrimary'}>\n                    {part.text}\n                  </Typography>\n                ))}\n              </li>\n            );\n          }}\n          renderTags={(recipients, getTagProps) =>\n            recipients.map((recipient, index) => {\n              const { id, name, avatar } = recipient;\n              return (\n                <Chip\n                  key={id}\n                  size=\"small\"\n                  label={name}\n                  color=\"info\"\n                  avatar={<Avatar alt={name} src={avatar} />}\n                  {...getTagProps({ index })}\n                />\n              );\n            })\n          }\n          renderInput={(params) => <TextField {...params} placeholder={recipients.length === 0 ? 'Recipients' : ''} />}\n        />\n      </AutocompleteStyle>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { capitalCase } from 'change-case';\nimport videoFill from '@iconify/icons-eva/video-fill';\nimport phoneFill from '@iconify/icons-eva/phone-fill';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Link, Avatar, Typography, AvatarGroup } from '@material-ui/core';\n// utils\nimport { fToNow } from '../../../utils/formatTime';\n//\nimport { MIconButton } from '../../@material-extend';\nimport BadgeStatus from '../../BadgeStatus';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexShrink: 0,\n  minHeight: 92,\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 3)\n}));\n\n// ----------------------------------------------------------------------\n\nOneAvatar.propTypes = {\n  participants: PropTypes.array\n};\n\nfunction OneAvatar({ participants }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined) {\n    return null;\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ position: 'relative' }}>\n        <Avatar src={participant.avatar} alt={participant.name} />\n        <BadgeStatus status={participant.status} sx={{ position: 'absolute', right: 2, bottom: 2 }} />\n      </Box>\n      <Box sx={{ ml: 2 }}>\n        <Typography variant=\"subtitle2\">{participant.name}</Typography>\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {participant.status !== 'offline' ? capitalCase(participant.status) : fToNow(participant.lastActivity)}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nGroupAvatar.propTypes = {\n  participants: PropTypes.array\n};\n\nfunction GroupAvatar({ participants }) {\n  return (\n    <div>\n      <AvatarGroup\n        max={3}\n        sx={{\n          mb: 0.5,\n          '& .MuiAvatar-root': { width: 32, height: 32 }\n        }}\n      >\n        {participants.map((participant) => (\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatar} />\n        ))}\n      </AvatarGroup>\n      <Link variant=\"body2\" underline=\"none\" component=\"button\" color=\"text.secondary\" onClick={() => {}}>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          {participants.length} persons\n          <Icon icon={arrowIosForwardFill} />\n        </Box>\n      </Link>\n    </div>\n  );\n}\n\nChatHeaderDetail.propTypes = {\n  participants: PropTypes.array\n};\n\nexport default function ChatHeaderDetail({ participants, ...other }) {\n  const isGroup = participants.length > 1;\n\n  return (\n    <RootStyle {...other}>\n      {isGroup ? <GroupAvatar participants={participants} /> : <OneAvatar participants={participants} />}\n\n      <Box sx={{ flexGrow: 1 }} />\n      <MIconButton>\n        <Icon icon={phoneFill} width={20} height={20} />\n      </MIconButton>\n      <MIconButton>\n        <Icon icon={videoFill} width={20} height={20} />\n      </MIconButton>\n      <MIconButton>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </MIconButton>\n    </RootStyle>\n  );\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport micFill from '@iconify/icons-eva/mic-fill';\nimport roundSend from '@iconify/icons-ic/round-send';\nimport attach2Fill from '@iconify/icons-eva/attach-2-fill';\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Input, Divider, IconButton, InputAdornment, Stack } from '@material-ui/core';\n//\nimport EmojiPicker from '../../EmojiPicker';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  minHeight: 56,\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'center',\n  paddingLeft: theme.spacing(2)\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageInput.propTypes = {\n  disabled: PropTypes.bool,\n  conversationId: PropTypes.string,\n  onSend: PropTypes.func\n};\n\nexport default function ChatMessageInput({ disabled, conversationId, onSend, ...other }) {\n  const fileInputRef = useRef(null);\n  const [message, setMessage] = useState('');\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleChangeMessage = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n\n  const handleSend = () => {\n    if (!message) {\n      return '';\n    }\n    if (onSend) {\n      onSend({\n        conversationId,\n        messageId: uuidv4(),\n        message,\n        contentType: 'text',\n        attachments: [],\n        createdAt: new Date(),\n        senderId: '8864c717-587d-472a-929a-8e5f298024da-0'\n      });\n    }\n    return setMessage('');\n  };\n\n  return (\n    <RootStyle {...other}>\n      <Input\n        disabled={disabled}\n        fullWidth\n        value={message}\n        disableUnderline\n        onKeyUp={handleKeyUp}\n        onChange={handleChangeMessage}\n        placeholder=\"Type a message\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <EmojiPicker disabled={disabled} value={message} setValue={setMessage} />\n          </InputAdornment>\n        }\n        endAdornment={\n          <Stack direction=\"row\" spacing={0.5} mr={1.5}>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Icon icon={roundAddPhotoAlternate} width={24} height={24} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\" onClick={handleAttach}>\n              <Icon icon={attach2Fill} width={24} height={24} />\n            </IconButton>\n            <IconButton disabled={disabled} size=\"small\">\n              <Icon icon={micFill} width={24} height={24} />\n            </IconButton>\n          </Stack>\n        }\n        sx={{ height: '100%' }}\n      />\n\n      <Divider orientation=\"vertical\" flexItem />\n\n      <IconButton color=\"primary\" disabled={!message} onClick={handleSend} sx={{ mx: 1 }}>\n        <Icon icon={roundSend} width={24} height={24} />\n      </IconButton>\n\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { formatDistanceToNowStrict } from 'date-fns';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Avatar, Box, Typography } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(3)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 320,\n  padding: theme.spacing(1.5),\n  marginTop: theme.spacing(0.5),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral\n}));\n\nconst InfoStyle = styled(Typography)(({ theme }) => ({\n  display: 'flex',\n  marginBottom: theme.spacing(0.75),\n  color: theme.palette.text.secondary\n}));\n\nconst MessageImgStyle = styled('img')(({ theme }) => ({\n  height: 200,\n  minWidth: 296,\n  width: '100%',\n  cursor: 'pointer',\n  objectFit: 'cover',\n  borderRadius: theme.shape.borderRadius\n}));\n\n// ----------------------------------------------------------------------\n\nChatMessageItem.propTypes = {\n  message: PropTypes.object.isRequired,\n  conversation: PropTypes.object.isRequired,\n  onOpenLightbox: PropTypes.func\n};\n\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox, ...other }) {\n  const sender = conversation.participants.find((participant) => participant.id === message.senderId);\n  const senderDetails =\n    message.senderId === '8864c717-587d-472a-929a-8e5f298024da-0'\n      ? { type: 'me' }\n      : { avatar: sender.avatar, name: sender.name };\n\n  const isMe = senderDetails.type === 'me';\n  const isImage = message.contentType === 'image';\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\n\n  return (\n    <RootStyle {...other}>\n      <Box\n        sx={{\n          display: 'flex',\n          ...(isMe && {\n            ml: 'auto'\n          })\n        }}\n      >\n        {senderDetails.type !== 'me' && (\n          <Avatar alt={senderDetails.name} src={senderDetails.avatar} sx={{ width: 32, height: 32 }} />\n        )}\n\n        <Box sx={{ ml: 2 }}>\n          <InfoStyle noWrap variant=\"caption\" sx={{ ...(isMe && { justifyContent: 'flex-end' }) }}>\n            {!isMe && `${firstName},`}&nbsp;\n            {formatDistanceToNowStrict(new Date(message.createdAt), {\n              addSuffix: true\n            })}\n          </InfoStyle>\n\n          <ContentStyle\n            sx={{\n              ...(isMe && {\n                color: 'grey.800',\n                bgcolor: 'primary.lighter'\n              })\n            }}\n          >\n            {isImage ? (\n              <MessageImgStyle alt=\"attachment\" src={message.body} onClick={() => onOpenLightbox(message.body)} />\n            ) : (\n              <Typography variant=\"body2\">{message.body}</Typography>\n            )}\n          </ContentStyle>\n        </Box>\n      </Box>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { findIndex } from 'lodash';\nimport { useEffect, useState, useRef } from 'react';\n//\nimport Scrollbar from '../../Scrollbar';\nimport LightboxModal from '../../LightboxModal';\nimport ChatMessageItem from './ChatMessageItem';\n\n// ----------------------------------------------------------------------\n\nChatMessageList.propTypes = {\n  conversation: PropTypes.object.isRequired\n};\n\nexport default function ChatMessageList({ conversation }) {\n  const scrollRef = useRef();\n  const [openLightbox, setOpenLightbox] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  useEffect(() => {\n    const scrollMessagesToBottom = () => {\n      if (scrollRef.current) {\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n      }\n    };\n    scrollMessagesToBottom();\n  }, [conversation.messages]);\n\n  const images = conversation.messages\n    .filter((messages) => messages.contentType === 'image')\n    .map((messages) => messages.body);\n\n  const handleOpenLightbox = (url) => {\n    const selectedImage = findIndex(images, (index) => index === url);\n    setOpenLightbox(true);\n    setSelectedImage(selectedImage);\n  };\n\n  return (\n    <Scrollbar scrollableNodeProps={{ ref: scrollRef }} sx={{ p: 3, flexGrow: 1 }}>\n      {conversation.messages.map((message) => (\n        <ChatMessageItem\n          key={message.id}\n          message={message}\n          conversation={conversation}\n          onOpenLightbox={handleOpenLightbox}\n        />\n      ))}\n\n      <LightboxModal\n        images={images}\n        photoIndex={selectedImage}\n        setPhotoIndex={setSelectedImage}\n        isOpen={openLightbox}\n        onClose={() => setOpenLightbox(false)}\n      />\n    </Scrollbar>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { uniq, flatten } from 'lodash';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Button, Divider, Collapse, Typography } from '@material-ui/core';\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\nimport { getFileFullName, getFileThumb } from '../../../utils/getFileFormat';\n//\nimport Scrollbar from '../../Scrollbar';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  height: '100%',\n  display: 'flex',\n  overflow: 'hidden',\n  flexDirection: 'column',\n  paddingBottom: theme.spacing(2)\n}));\n\nconst FileItemStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: theme.spacing(2),\n  padding: theme.spacing(0, 2.5)\n}));\n\nconst FileThumbStyle = styled('div')(({ theme }) => ({\n  width: 40,\n  height: 40,\n  flexShrink: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.grey[500_16]\n}));\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  flexShrink: 0,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled\n}));\n\n// ----------------------------------------------------------------------\n\nAttachmentItem.propTypes = {\n  file: PropTypes.object,\n  fileUrl: PropTypes.string\n};\n\nfunction AttachmentItem({ file, fileUrl }) {\n  return (\n    <FileItemStyle key={fileUrl}>\n      <FileThumbStyle>{getFileThumb(fileUrl)}</FileThumbStyle>\n      <Box sx={{ ml: 1.5, maxWidth: 150 }}>\n        <Typography variant=\"body2\" noWrap>\n          {getFileFullName(fileUrl)}\n        </Typography>\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\n          {fDateTime(file.createdAt)}\n        </Typography>\n      </Box>\n    </FileItemStyle>\n  );\n}\n\nChatRoomAttachment.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func\n};\n\nexport default function ChatRoomAttachment({ conversation, isCollapse, onCollapse, ...other }) {\n  const totalAttachment = uniq(flatten(conversation.messages.map((item) => item.attachments))).length;\n\n  return (\n    <RootStyle {...other}>\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\n      >\n        attachment ({totalAttachment})\n      </CollapseButtonStyle>\n\n      {!isCollapse && <Divider />}\n\n      <Scrollbar>\n        <Collapse in={isCollapse}>\n          {conversation.messages.map((file) => (\n            <div key={file.id}>\n              {file.attachments.map((fileUrl) => (\n                <AttachmentItem key={fileUrl} file={file} fileUrl={fileUrl} />\n              ))}\n            </div>\n          ))}\n        </Collapse>\n      </Scrollbar>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport pinFill from '@iconify/icons-eva/pin-fill';\nimport phoneFill from '@iconify/icons-eva/phone-fill';\nimport emailFill from '@iconify/icons-eva/email-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Avatar, Button, Divider, Collapse, Typography, Stack } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled\n}));\n\nconst RowIconStyle = styled(Icon)(({ theme }) => ({\n  width: 16,\n  height: 16,\n  marginTop: 4,\n  color: theme.palette.text.secondary\n}));\n\nconst RowTextStyle = styled(Typography)(({ theme }) => ({\n  flexGrow: 1,\n  maxWidth: 160,\n  wordWrap: 'break-word',\n  ...theme.typography.body2\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomOneParticipant.propTypes = {\n  participants: PropTypes.array.isRequired,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func\n};\n\nexport default function ChatRoomOneParticipant({ participants, isCollapse, onCollapse, ...other }) {\n  const participant = [...participants][0];\n\n  if (participant === undefined) {\n    return null;\n  }\n\n  return (\n    <Box {...other}>\n      <Box\n        sx={{\n          pt: 4,\n          pb: 3,\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column'\n        }}\n      >\n        <Avatar alt={participant.name} src={participant.avatar} sx={{ width: 96, height: 96 }} />\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            {participant.position}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Divider />\n\n      <CollapseButtonStyle\n        fullWidth\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\n      >\n        information\n      </CollapseButtonStyle>\n\n      <Collapse in={isCollapse}>\n        <Stack spacing={2} sx={{ p: 2.5, pt: 1 }}>\n          <Stack direction=\"row\" spacing={1}>\n            <RowIconStyle icon={pinFill} />\n            <RowTextStyle>{participant.address}</RowTextStyle>\n          </Stack>\n          <Stack direction=\"row\" spacing={1}>\n            <RowIconStyle icon={phoneFill} />\n            <RowTextStyle>{participant.phone}</RowTextStyle>\n          </Stack>\n          <Stack direction=\"row\" spacing={1}>\n            <RowIconStyle icon={emailFill} />\n            <RowTextStyle>{participant.email}</RowTextStyle>\n          </Stack>\n        </Stack>\n      </Collapse>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport pinFill from '@iconify/icons-eva/pin-fill';\nimport phoneFill from '@iconify/icons-eva/phone-fill';\nimport emailFill from '@iconify/icons-eva/email-fill';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Avatar, Typography, DialogContent } from '@material-ui/core';\n//\nimport { DialogAnimate } from '../../animate';\n\n// ----------------------------------------------------------------------\n\nconst RowStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  marginTop: theme.spacing(1.5)\n}));\n\nconst IconStyle = styled(Icon)(({ theme }) => ({\n  width: 16,\n  height: 16,\n  marginRight: theme.spacing(1),\n  color: theme.palette.text.secondary\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoomPopup.propTypes = {\n  participant: PropTypes.object,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func\n};\n\nexport default function ChatRoomPopup({ participant, isOpen, onClose, ...other }) {\n  const { name, avatar, position, address, phone, email } = participant;\n\n  return (\n    <DialogAnimate fullWidth maxWidth=\"xs\" open={isOpen} onClose={onClose} {...other}>\n      <DialogContent sx={{ pb: 5, textAlign: 'center' }}>\n        <Avatar\n          alt={name}\n          src={avatar}\n          sx={{\n            mt: 5,\n            mb: 2,\n            mx: 'auto',\n            width: 96,\n            height: 96\n          }}\n        />\n        <Typography variant=\"h6\">{name}</Typography>\n        <Typography variant=\"body2\" paragraph sx={{ color: 'text.secondary' }}>\n          {position}\n        </Typography>\n\n        <RowStyle>\n          <IconStyle icon={pinFill} />\n          <Typography variant=\"body2\">{address}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <IconStyle icon={phoneFill} />\n          <Typography variant=\"body2\">{phone}</Typography>\n        </RowStyle>\n        <RowStyle>\n          <IconStyle icon={emailFill} />\n          <Typography variant=\"body2\">{email}</Typography>\n        </RowStyle>\n      </DialogContent>\n    </DialogAnimate>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, List, Avatar, Button, Collapse, ListItemText, ListItemAvatar, ListItemButton } from '@material-ui/core';\n//\nimport Scrollbar from '../../Scrollbar';\nimport BadgeStatus from '../../BadgeStatus';\nimport ChatRoomPopup from './ChatRoomPopup';\n\n// ----------------------------------------------------------------------\n\nconst HEIGHT = 64;\n\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\n  ...theme.typography.overline,\n  height: 40,\n  borderRadius: 0,\n  padding: theme.spacing(1, 2),\n  justifyContent: 'space-between',\n  color: theme.palette.text.disabled\n}));\n\n// ----------------------------------------------------------------------\n\nParticipant.propTypes = {\n  participant: PropTypes.object.isRequired,\n  isOpen: PropTypes.bool,\n  onClosePopup: PropTypes.func,\n  onShowPopup: PropTypes.func\n};\n\nfunction Participant({ participant, isOpen, onClosePopup, onShowPopup }) {\n  const { name, avatar, status, position } = participant;\n\n  return (\n    <>\n      <ListItemButton disableGutters onClick={onShowPopup} sx={{ height: HEIGHT, px: 2.5 }}>\n        <ListItemAvatar>\n          <Box sx={{ position: 'relative', width: 40, height: 40 }}>\n            <Avatar alt={name} src={avatar} />\n            <BadgeStatus status={status} sx={{ right: 0, bottom: 0, position: 'absolute' }} />\n          </Box>\n        </ListItemAvatar>\n        <ListItemText\n          primary={name}\n          secondary={position}\n          primaryTypographyProps={{ variant: 'subtitle2', noWrap: true }}\n          secondaryTypographyProps={{ noWrap: true }}\n        />\n      </ListItemButton>\n      <ChatRoomPopup participant={participant} isOpen={isOpen} onClose={onClosePopup} />\n    </>\n  );\n}\n\nChatRoomGroupParticipant.propTypes = {\n  participants: PropTypes.array.isRequired,\n  selectUserId: PropTypes.string,\n  onShowPopupUserInfo: PropTypes.func,\n  isCollapse: PropTypes.bool,\n  onCollapse: PropTypes.func\n};\n\nexport default function ChatRoomGroupParticipant({\n  participants,\n  selectUserId,\n  onShowPopupUserInfo,\n  isCollapse,\n  onCollapse,\n  ...other\n}) {\n  return (\n    <Box {...other}>\n      <CollapseButtonStyle\n        fullWidth\n        disableRipple\n        color=\"inherit\"\n        onClick={onCollapse}\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\n      >\n        In room ({participants.length})\n      </CollapseButtonStyle>\n\n      <Box sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\n        <Scrollbar>\n          <Collapse in={isCollapse}>\n            <List disablePadding>\n              {participants.map((participant) => (\n                <Participant\n                  key={participant.id}\n                  participant={participant}\n                  isOpen={selectUserId === participant.id}\n                  onShowPopup={() => onShowPopupUserInfo(participant.id)}\n                  onClosePopup={() => onShowPopupUserInfo(null)}\n                />\n              ))}\n            </List>\n          </Collapse>\n        </Scrollbar>\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useState, useEffect } from 'react';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { useTheme, styled } from '@material-ui/core/styles';\nimport { useMediaQuery, Divider, IconButton } from '@material-ui/core';\n//\nimport ChatRoomAttachment from './ChatRoomAttachment';\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 240,\n  flexShrink: 0,\n  display: 'flex',\n  position: 'relative',\n  flexDirection: 'column',\n  borderLeft: `solid 1px ${theme.palette.divider}`,\n  transition: theme.transitions.create('width')\n}));\n\nconst ToggleButtonStyle = styled('div')(({ theme }) => ({\n  borderRight: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  position: 'absolute',\n  alignItems: 'center',\n  top: theme.spacing(1),\n  left: theme.spacing(-4),\n  width: theme.spacing(4),\n  height: theme.spacing(4),\n  justifyContent: 'center',\n  boxShadow: theme.customShadows.z8,\n  border: `solid 1px ${theme.palette.divider}`,\n  borderTopLeftRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.paper,\n  borderBottomLeftRadius: theme.shape.borderRadius\n}));\n\n// ----------------------------------------------------------------------\n\nChatRoom.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  participants: PropTypes.array.isRequired\n};\n\nexport default function ChatRoom({ conversation, participants, ...other }) {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [showInfo, setShowInfo] = useState(true);\n  const [selectUser, setSelectUser] = useState(null);\n  const [showAttachment, setShowAttachment] = useState(true);\n  const [showParticipants, setShowParticipants] = useState(true);\n  const isGroup = participants.length > 1;\n\n  useEffect(() => {\n    if (isMobile) {\n      return setOpenSidebar(false);\n    }\n    return setOpenSidebar(true);\n  }, [isMobile]);\n\n  return (\n    <RootStyle\n      sx={{\n        ...(!openSidebar && {\n          width: 0,\n          '& > *': { overflow: 'hidden' }\n        })\n      }}\n      {...other}\n    >\n      <ToggleButtonStyle>\n        <IconButton onClick={() => setOpenSidebar(!openSidebar)}>\n          <Icon width={16} height={16} icon={openSidebar ? arrowIosForwardFill : arrowIosBackFill} />\n        </IconButton>\n      </ToggleButtonStyle>\n\n      {isGroup ? (\n        <ChatRoomGroupParticipant\n          selectUserId={selectUser}\n          participants={participants}\n          isCollapse={showParticipants}\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\n          onCollapse={() => setShowParticipants((prev) => !prev)}\n        />\n      ) : (\n        <ChatRoomOneParticipant\n          participants={participants}\n          isCollapse={showInfo}\n          onCollapse={() => setShowInfo((prev) => !prev)}\n        />\n      )}\n      <Divider />\n\n      <ChatRoomAttachment\n        conversation={conversation}\n        isCollapse={showAttachment}\n        onCollapse={() => setShowAttachment((prev) => !prev)}\n      />\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { List, Avatar, Typography, ListItemText, ListItemAvatar, ListItemButton } from '@material-ui/core';\n//\nimport SearchNotFound from '../../SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nChatSearchResults.propTypes = {\n  query: PropTypes.string,\n  results: PropTypes.array,\n  onSelectContact: PropTypes.func\n};\n\nexport default function ChatSearchResults({ query, results, onSelectContact }) {\n  const isFound = results.length > 0;\n\n  return (\n    <>\n      <Typography paragraph variant=\"subtitle1\" sx={{ px: 3, color: 'text.secondary' }}>\n        Contacts\n      </Typography>\n\n      <List disablePadding>\n        {results.map((result) => (\n          <ListItemButton\n            key={result.id}\n            onClick={() => onSelectContact(result)}\n            sx={{\n              py: 1.5,\n              px: 3\n            }}\n          >\n            <ListItemAvatar>\n              <Avatar alt={result.name} src={result.avatar} />\n            </ListItemAvatar>\n            <ListItemText\n              primary={result.name}\n              primaryTypographyProps={{\n                noWrap: true,\n                variant: 'subtitle2'\n              }}\n            />\n          </ListItemButton>\n        ))}\n      </List>\n      {!isFound && (\n        <SearchNotFound\n          searchQuery={query}\n          sx={{\n            p: 3,\n            mx: 'auto',\n            width: `calc(100% - 48px)`,\n            bgcolor: 'background.neutral'\n          }}\n        />\n      )}\n    </>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport { useState, useEffect } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\n\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n// material\nimport { useTheme, styled } from '@material-ui/core/styles';\nimport { Box, useMediaQuery } from '@material-ui/core';\n// redux\nimport { useSelector } from '../../../redux/store';\n// utils\nimport axios from '../../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport { MIconButton } from '../../@material-extend';\nimport Scrollbar from '../../Scrollbar';\nimport ChatAccount from './ChatAccount';\nimport ChatSearchResults from './ChatSearchResults';\nimport ChatContactSearch from './ChatContactSearch';\nimport ChatConversationList from './ChatConversationList';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 320,\n  flexShrink: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  transition: theme.transitions.create('width'),\n  borderRight: `1px solid ${theme.palette.divider}`\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ChatSidebar() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearchFocused, setSearchFocused] = useState(false);\n  const displayResults = searchQuery && isSearchFocused;\n  const { conversations, activeConversationId } = useSelector((state) => state.chat);\n\n  useEffect(() => {\n    if (isMobile) {\n      return setOpenSidebar(false);\n    }\n    return setOpenSidebar(true);\n  }, [isMobile]);\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (!openSidebar) {\n      return setSearchFocused(false);\n    }\n  }, [openSidebar]);\n\n  const handleClickAwaySearch = () => {\n    setSearchFocused(false);\n    setSearchQuery('');\n  };\n\n  const handleChangeSearch = async (event) => {\n    try {\n      const { value } = event.target;\n      setSearchQuery(value);\n      if (value) {\n        const response = await axios.get('/api/chat/search', {\n          params: { query: value }\n        });\n        setSearchResults(response.data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleSearchFocus = () => {\n    setSearchFocused(true);\n  };\n\n  const handleSearchSelect = (username) => {\n    setSearchFocused(false);\n    setSearchQuery('');\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\n  };\n\n  const handleSelectContact = (result) => {\n    if (handleSearchSelect) {\n      handleSearchSelect(result.username);\n    }\n  };\n\n  return (\n    <RootStyle sx={{ ...(!openSidebar && { width: 96 }) }}>\n      <Box sx={{ py: 2, px: 3 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          {openSidebar && (\n            <>\n              <ChatAccount />\n              <Box sx={{ flexGrow: 1 }} />\n            </>\n          )}\n\n          <MIconButton onClick={() => setOpenSidebar(!openSidebar)}>\n            <Icon width={20} height={20} icon={openSidebar ? arrowIosBackFill : arrowIosForwardFill} />\n          </MIconButton>\n\n          {openSidebar && (\n            <MIconButton to={PATH_DASHBOARD.chat.new} component={RouterLink}>\n              <Icon icon={editFill} width={20} height={20} />\n            </MIconButton>\n          )}\n        </Box>\n\n        {openSidebar && (\n          <ChatContactSearch\n            query={searchQuery}\n            onFocus={handleSearchFocus}\n            onChange={handleChangeSearch}\n            onClickAway={handleClickAwaySearch}\n          />\n        )}\n      </Box>\n\n      <Scrollbar>\n        {!displayResults ? (\n          <ChatConversationList\n            conversations={conversations}\n            isOpenSidebar={openSidebar}\n            activeConversationId={activeConversationId}\n            sx={{ ...(isSearchFocused && { display: 'none' }) }}\n          />\n        ) : (\n          <ChatSearchResults query={searchQuery} results={searchResults} onSelectContact={handleSelectContact} />\n        )}\n      </Scrollbar>\n    </RootStyle>\n  );\n}\n","import { useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\n// material\nimport { Box, Divider } from '@material-ui/core';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport {\n  addRecipients,\n  onSendMessage,\n  getConversation,\n  getParticipants,\n  markConversationAsRead,\n  resetActiveConversation\n} from '../../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport ChatRoom from './ChatRoom';\nimport ChatMessageList from './ChatMessageList';\nimport ChatHeaderDetail from './ChatHeaderDetail';\nimport ChatMessageInput from './ChatMessageInput';\nimport ChatHeaderCompose from './ChatHeaderCompose';\n\n// ----------------------------------------------------------------------\n\nconst conversationSelector = (state) => {\n  const { conversations, activeConversationId } = state.chat;\n  const conversation = conversations.byId[activeConversationId];\n  if (conversation) {\n    return conversation;\n  }\n  return {\n    id: null,\n    messages: [],\n    participants: [],\n    unreadMessages: 0\n  };\n};\n\nexport default function ChatWindow() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const { conversationKey } = useParams();\n  const { contacts, recipients, participants, activeConversationId } = useSelector((state) => state.chat);\n  const conversation = useSelector((state) => conversationSelector(state));\n  const mode = conversationKey ? 'DETAIL' : 'COMPOSE';\n\n  const displayParticipants = participants.filter((item) => item.id !== '8864c717-587d-472a-929a-8e5f298024da-0');\n\n  useEffect(() => {\n    const getDetails = async () => {\n      dispatch(getParticipants(conversationKey));\n      try {\n        dispatch(getConversation(conversationKey));\n      } catch (error) {\n        console.error(error);\n        navigate(PATH_DASHBOARD.chat.new);\n      }\n    };\n    if (conversationKey) {\n      getDetails();\n    } else if (activeConversationId) {\n      dispatch(resetActiveConversation());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversationKey]);\n\n  useEffect(() => {\n    if (activeConversationId) {\n      dispatch(markConversationAsRead(activeConversationId));\n    }\n  }, [dispatch, activeConversationId]);\n\n  const handleAddRecipient = (recipient) => {\n    dispatch(addRecipients(recipient));\n  };\n\n  const handleSendMessage = async (value) => {\n    try {\n      dispatch(onSendMessage(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n      {mode === 'DETAIL' ? (\n        <ChatHeaderDetail participants={displayParticipants} />\n      ) : (\n        <ChatHeaderCompose\n          recipients={recipients}\n          contacts={Object.values(contacts.byId)}\n          onAddRecipient={handleAddRecipient}\n        />\n      )}\n\n      <Divider />\n\n      <Box sx={{ flexGrow: 1, display: 'flex', overflow: 'hidden' }}>\n        <Box sx={{ display: 'flex', flexGrow: 1, flexDirection: 'column' }}>\n          <ChatMessageList conversation={conversation} />\n\n          <Divider />\n\n          <ChatMessageInput\n            conversationId={activeConversationId}\n            onSend={handleSendMessage}\n            disabled={pathname === PATH_DASHBOARD.chat.new}\n          />\n        </Box>\n\n        {mode === 'DETAIL' && <ChatRoom conversation={conversation} participants={displayParticipants} />}\n      </Box>\n    </Box>\n  );\n}\n","import { useEffect } from 'react';\n// material\nimport { Card, Container } from '@material-ui/core';\n// redux\nimport { useDispatch } from '../../redux/store';\nimport { getConversations, getContacts } from '../../redux/slices/chat';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { ChatSidebar, ChatWindow } from '../../components/_dashboard/chat';\n\n// ----------------------------------------------------------------------\n\nexport default function Chat() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getConversations());\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Chat | Minimal-UI\">\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <HeaderBreadcrumbs\n          heading=\"Chat\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Chat' }]}\n        />\n        <Card sx={{ height: '72vh', display: 'flex' }}>\n          <ChatSidebar />\n          <ChatWindow />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}