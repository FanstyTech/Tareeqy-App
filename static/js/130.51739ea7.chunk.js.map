{"version":3,"sources":["components/HeaderBreadcrumbs.js","pages/components-overview/material-ui/table/BasicTable.js","pages/components-overview/material-ui/table/collapsible-table/CollapsibleTableRow.js","pages/components-overview/material-ui/table/collapsible-table/index.js","pages/components-overview/material-ui/table/sorting-selecting/SortingSelectingHead.js","pages/components-overview/material-ui/table/sorting-selecting/SortingSelectingToolbar.js","pages/components-overview/material-ui/table/sorting-selecting/index.js","pages/components-overview/material-ui/table/GroupingFixedHeader.js","pages/components-overview/material-ui/table/index.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","createData","name","calories","fat","carbs","protein","BASIC_TABLE","BasicTable","Scrollbar","TableContainer","minWidth","Table","TableHead","TableRow","TableCell","align","TableBody","row","component","scope","CollapsibleTable","useState","open","setOpen","IconButton","size","onClick","icon","arrowIosUpwardFill","arrowIosDownwardFill","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","history","historyRow","date","customerId","amount","Math","round","price","COLLAPSIBLE_TABLE","SortingSelectingHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","numeric","disablePadding","sortDirection","id","TableSortLabel","active","direction","property","event","label","visuallyHidden","RootStyle","styled","Toolbar","height","justifyContent","theme","spacing","SortingSelectingToolbar","isLight","useTheme","palette","mode","color","bgcolor","Tooltip","title","trash2Fill","roundFilterList","SORTING_SELECTING_TABLE","TABLE_HEAD","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","SortingSelecting","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","max","length","newSelecteds","n","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","position","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","px","py","top","md","FormControlLabel","control","Switch","code","population","density","GROUPING_TABLE","COLUMNS","format","toLocaleString","toFixed","GroupingFixedHeader","maxHeight","stickyHeader","background","paper","column","Page","TableComponent","pt","pb","Container","maxWidth","PATH_PAGE","components","Stack","Card","CardHeader"],"mappings":"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","file":"static/js/130.51739ea7.chunk.js","sourcesContent":["import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","// material\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@material-ui/core';\n// components\nimport Scrollbar from '../../../../components/Scrollbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst BASIC_TABLE = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9)\n];\n\n// ----------------------------------------------------------------------\n\nexport default function BasicTable() {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800, mt: 3 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {BASIC_TABLE.map((row) => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useState } from 'react';\nimport arrowIosUpwardFill from '@iconify/icons-eva/arrow-ios-upward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport {\n  Box,\n  Table,\n  Collapse,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Typography,\n  IconButton\n} from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nCollapsibleTable.propTypes = {\n  row: PropTypes.shape({\n    calories: PropTypes.number.isRequired,\n    carbs: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        customerId: PropTypes.string.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    protein: PropTypes.number.isRequired\n  }).isRequired\n};\n\nexport default function CollapsibleTable({ row }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          <IconButton size=\"small\" onClick={() => setOpen(!open)}>\n            <Icon icon={open ? arrowIosUpwardFill : arrowIosDownwardFill} />\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.calories}</TableCell>\n        <TableCell align=\"right\">{row.fat}</TableCell>\n        <TableCell align=\"right\">{row.carbs}</TableCell>\n        <TableCell align=\"right\">{row.protein}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                History\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell align=\"right\">Amount</TableCell>\n                    <TableCell align=\"right\">Total price ($)</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell>{historyRow.customerId}</TableCell>\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                      <TableCell align=\"right\">{Math.round(historyRow.amount * row.price * 100) / 100}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n","// material\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer } from '@material-ui/core';\n// components\nimport Scrollbar from '../../../../../components/Scrollbar';\n//\nimport CollapsibleTableRow from './CollapsibleTableRow';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [\n      {\n        date: '2020-01-05',\n        customerId: '11091700',\n        amount: 3\n      },\n      {\n        date: '2020-01-02',\n        customerId: 'Anonymous',\n        amount: 1\n      }\n    ]\n  };\n}\n\nconst COLLAPSIBLE_TABLE = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5)\n];\n\nexport default function CollapsibleTable() {\n  return (\n    <Scrollbar>\n      <TableContainer sx={{ minWidth: 800, mt: 3 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>Dessert (100g serving)</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {COLLAPSIBLE_TABLE.map((row) => (\n              <CollapsibleTableRow key={row.name} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Scrollbar>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@material-ui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nSortingSelectingHead.propTypes = {\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  headLabel: PropTypes.array.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired\n};\n\nexport default function SortingSelectingHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts'\n            }}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { useTheme, styled } from '@material-ui/core/styles';\nimport { Toolbar, Tooltip, Typography, IconButton } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\n// ----------------------------------------------------------------------\n\nSortingSelectingToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function SortingSelectingToolbar({ numSelected }) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: isLight ? 'primary.main' : 'text.primary',\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Sorting & Selecting\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Icon icon={trash2Fill} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <Icon icon={roundFilterList} />\n          </IconButton>\n        </Tooltip>\n      )}\n    </RootStyle>\n  );\n}\n","import { useState } from 'react';\n// material\nimport {\n  Box,\n  Table,\n  Switch,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  FormControlLabel\n} from '@material-ui/core';\n// components\nimport Scrollbar from '../../../../../components/Scrollbar';\n//\nimport SortingSelectingHead from './SortingSelectingHead';\nimport SortingSelectingToolbar from './SortingSelectingToolbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst SORTING_SELECTING_TABLE = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0)\n];\n\nconst TABLE_HEAD = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Dessert (100g serving)'\n  },\n  {\n    id: 'calories',\n    numeric: true,\n    disablePadding: false,\n    label: 'Calories'\n  },\n  {\n    id: 'fat',\n    numeric: true,\n    disablePadding: false,\n    label: 'Fat (g)'\n  },\n  {\n    id: 'carbs',\n    numeric: true,\n    disablePadding: false,\n    label: 'Carbs (g)'\n  },\n  {\n    id: 'protein',\n    numeric: true,\n    disablePadding: false,\n    label: 'Protein (g)'\n  }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function SortingSelecting() {\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('calories');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = SORTING_SELECTING_TABLE.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty SORTING_SELECTING_TABLE.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - SORTING_SELECTING_TABLE.length) : 0;\n\n  return (\n    <>\n      <SortingSelectingToolbar numSelected={selected.length} />\n\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 800 }}>\n          <Table size={dense ? 'small' : 'medium'}>\n            <SortingSelectingHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              rowCount={SORTING_SELECTING_TABLE.length}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {stableSort(SORTING_SELECTING_TABLE, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox checked={isItemSelected} />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: (dense ? 33 : 53) * emptyRows\n                  }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <Box sx={{ position: 'relative' }}>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={SORTING_SELECTING_TABLE.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n        <Box\n          sx={{\n            px: 3,\n            py: 1.5,\n            top: 0,\n            position: { md: 'absolute' }\n          }}\n        >\n          <FormControlLabel control={<Switch checked={dense} onChange={handleChangeDense} />} label=\"Dense padding\" />\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import { useState } from 'react';\n// material\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer, TablePagination } from '@material-ui/core';\n// components\nimport Scrollbar from '../../../../components/Scrollbar';\n\n// ----------------------------------------------------------------------\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nconst GROUPING_TABLE = [\n  createData('India', 'IN', 1324171354, 3287263),\n  createData('China', 'CN', 1403500365, 9596961),\n  createData('Italy', 'IT', 60483973, 301340),\n  createData('United States', 'US', 327167434, 9833520),\n  createData('Canada', 'CA', 37602103, 9984670),\n  createData('Australia', 'AU', 25475400, 7692024),\n  createData('Germany', 'DE', 83019200, 357578),\n  createData('Ireland', 'IE', 4857000, 70273),\n  createData('Mexico', 'MX', 126577691, 1972550),\n  createData('Japan', 'JP', 126317000, 377973),\n  createData('France', 'FR', 67022000, 640679),\n  createData('United Kingdom', 'GB', 67545757, 242495),\n  createData('Russia', 'RU', 146793744, 17098246),\n  createData('Nigeria', 'NG', 200962417, 923768),\n  createData('Brazil', 'BR', 210147125, 8515767)\n];\n\nconst COLUMNS = [\n  { id: 'name', label: 'Name', minWidth: 170 },\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n  {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US')\n  },\n  {\n    id: 'size',\n    label: 'Size\\u00a0(km\\u00b2)',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US')\n  },\n  {\n    id: 'density',\n    label: 'Density',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toFixed(2)\n  }\n];\n\n// ----------------------------------------------------------------------\n\nexport default function GroupingFixedHeader() {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <>\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 800, maxHeight: 400 }}>\n          <Table stickyHeader>\n            <TableHead>\n              <TableRow>\n                <TableCell\n                  align=\"center\"\n                  colSpan={2}\n                  sx={{\n                    background: (theme) => theme.palette.background.paper\n                  }}\n                >\n                  Country\n                </TableCell>\n                <TableCell align=\"center\" colSpan={3} sx={{ background: (theme) => theme.palette.background.paper }}>\n                  Details\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                {COLUMNS.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ top: 56, minWidth: column.minWidth }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {GROUPING_TABLE.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {COLUMNS.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <TablePagination\n        page={page}\n        component=\"div\"\n        count={GROUPING_TABLE.length}\n        rowsPerPage={rowsPerPage}\n        onPageChange={handleChangePage}\n        rowsPerPageOptions={[10, 25, 100]}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n}\n","// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Card, Container, CardHeader, Stack } from '@material-ui/core';\n// routes\nimport { PATH_PAGE } from '../../../../routes/paths';\n// components\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\n//\nimport BasicTable from './BasicTable';\nimport CollapsibleTable from './collapsible-table';\nimport SortingSelecting from './sorting-selecting';\nimport GroupingFixedHeader from './GroupingFixedHeader';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15)\n}));\n\nexport default function TableComponent() {\n  return (\n    <RootStyle title=\"Components: Table | Minimal-UI\">\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          mb: 10,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800')\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <HeaderBreadcrumbs\n            heading=\"Table\"\n            links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Table' }]}\n            moreLink=\"https://next.material-ui.com/components/tables\"\n          />\n        </Container>\n      </Box>\n\n      <Container maxWidth=\"lg\">\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"Basic Table\" />\n            <BasicTable />\n          </Card>\n\n          <Card>\n            <SortingSelecting />\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Grouping & FixedHeader\" />\n            <GroupingFixedHeader />\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Collapsible Table\" />\n            <CollapsibleTable />\n          </Card>\n        </Stack>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}