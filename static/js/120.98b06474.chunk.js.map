{"version":3,"sources":["utils/formatNumber.js","components/HeaderBreadcrumbs.js","pages/components-overview/material-ui/data-grid/DataGridBasic.js","pages/components-overview/material-ui/data-grid/DataGridCustom.js","pages/components-overview/material-ui/data-grid/index.js"],"names":["fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fShortenNumber","replace","fData","HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","columns","field","headerName","width","editable","type","align","headerAlign","description","flex","valueGetter","params","getValue","id","sortable","disableColumnMenu","renderCell","Box","component","Icon","icon","moreVerticalFill","height","rows","Array","_","index","mockData","lastName","name","firstName","age","DataGridBasic","checkboxSelection","disableSelectionOnClick","hide","filterable","getAvatar","color","createAvatar","getEmail","Typography","textDecoration","getRating","Rating","size","value","precision","readOnly","valueOptions","getStatus","isLight","useTheme","palette","mode","Label","textTransform","mx","RenderStatus","getAdmin","Stack","textAlign","checkmarkCircle2Fill","direction","px","LinearProgress","selectedID","row","onClick","console","log","fullName","email","lastLogin","time","performance","percent","rating","status","sample","isAdmin","boolean","CustomPagination","useGridSlotComponentProps","state","apiRef","Pagination","count","pagination","pageCount","page","onChange","event","current","setPage","RatingInputValue","item","applyValue","p","placeholder","newValue","DataGridCustom","length","ratingColumn","find","column","ratingColIndex","findIndex","col","ratingFilterOperators","getGridNumericColumnOperators","operator","InputComponent","filterOperators","pageSize","components","Toolbar","GridToolbar","RootStyle","styled","Page","theme","paddingTop","spacing","paddingBottom","DataGridComponent","title","pt","pb","bgcolor","Container","maxWidth","PATH_PAGE","Card","CardHeader"],"mappings":"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","file":"static/js/120.98b06474.chunk.js","sourcesContent":["import { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Box } from '@material-ui/core';\n// utils\nimport mockData from '../../../../utils/mock-data';\n// components\nimport { MIconButton } from '../../../../components/@material-extend';\n\n// ----------------------------------------------------------------------\n\nconst columns = [\n  {\n    field: 'id',\n    headerName: 'ID',\n    width: 120\n  },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 160,\n    editable: true\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 160,\n    editable: true\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 120,\n    editable: true,\n    align: 'center',\n    headerAlign: 'center'\n  },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    flex: 1,\n    valueGetter: (params) =>\n      `${params.getValue(params.id, 'firstName') || ''} ${params.getValue(params.id, 'lastName') || ''}`\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    width: 80,\n    align: 'right',\n    sortable: false,\n    disableColumnMenu: true,\n    renderCell: () => (\n      <MIconButton>\n        <Box component={Icon} icon={moreVerticalFill} sx={{ width: 20, height: 20 }} />\n      </MIconButton>\n    )\n  }\n];\n\nconst rows = [...Array(30)].map((_, index) => ({\n  id: mockData.id(index),\n  lastName: mockData.name.lastName(index),\n  firstName: mockData.name.firstName(index),\n  age: mockData.number.age(index)\n}));\n\nexport default function DataGridBasic() {\n  return <DataGrid columns={columns} rows={rows} checkboxSelection disableSelectionOnClick />;\n}\n","import PropTypes from 'prop-types';\nimport { sample } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\nimport checkmarkCircle2Fill from '@iconify/icons-eva/checkmark-circle-2-fill';\n// material\nimport { useTheme } from '@material-ui/core/styles';\nimport { Stack, Typography, Box, Rating, Pagination, LinearProgress } from '@material-ui/core';\nimport {\n  DataGrid,\n  GridToolbar,\n  useGridSlotComponentProps,\n  getGridNumericColumnOperators\n} from '@material-ui/data-grid';\n// utils\nimport createAvatar from '../../../../utils/createAvatar';\nimport { fPercent } from '../../../../utils/formatNumber';\nimport mockData from '../../../../utils/mock-data';\n// components\nimport Label from '../../../../components/Label';\nimport { MIconButton, MAvatar } from '../../../../components/@material-extend';\n\n// ----------------------------------------------------------------------\n\nfunction RenderStatus(getStatus) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n  return (\n    <Label\n      variant={isLight ? 'ghost' : 'filled'}\n      color={(getStatus === 'busy' && 'error') || (getStatus === 'away' && 'warning') || 'success'}\n      sx={{ textTransform: 'capitalize', mx: 'auto' }}\n    >\n      {getStatus}\n    </Label>\n  );\n}\n\nconst columns = [\n  // OPTIONS\n  // https://material-ui.com/api/data-grid/grid-col-def/#main-content\n  // - hide: false (default)\n  // - editable: false (default)\n  // - filterable: true (default)\n  // - sortable: true (default)\n  // - disableColumnMenu: false (default)\n\n  // FIELD TYPES\n  // --------------------\n  // 'string' (default)\n  // 'number'\n  // 'date'\n  // 'dateTime'\n  // 'boolean'\n  // 'singleSelect'\n\n  {\n    field: 'id',\n    hide: true\n  },\n  {\n    field: 'avatar',\n    headerName: 'Avatar',\n    width: 64,\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    align: 'center',\n    renderCell: (params) => {\n      const getAvatar = params.getValue(params.id, 'name');\n      return (\n        <MAvatar color={createAvatar(getAvatar).color} sx={{ width: 36, height: 36 }}>\n          {createAvatar(getAvatar).name}\n        </MAvatar>\n      );\n    }\n  },\n  {\n    field: 'name',\n    headerName: 'Name',\n    flex: 1\n  },\n  {\n    field: 'email',\n    headerName: 'Email',\n    flex: 1,\n    renderCell: (params) => {\n      const getEmail = params.getValue(params.id, 'email');\n      return (\n        <Typography variant=\"body2\" sx={{ textDecoration: 'underline' }} noWrap>\n          {getEmail}\n        </Typography>\n      );\n    }\n  },\n  {\n    field: 'lastLogin',\n    type: 'dateTime',\n    headerName: 'Last login',\n    width: 200,\n    align: 'right',\n    headerAlign: 'right'\n  },\n  {\n    field: 'rating',\n    type: 'number',\n    headerName: 'Rating',\n    width: 160,\n    disableColumnMenu: true,\n    renderCell: (params) => {\n      const getRating = params.getValue(params.id, 'rating');\n      return <Rating size=\"small\" value={getRating} precision={0.5} readOnly />;\n    }\n  },\n  {\n    field: 'status',\n    type: 'singleSelect',\n    headerName: 'Status',\n    width: 120,\n    valueOptions: ['online', 'away', 'busy'],\n    renderCell: (params) => {\n      const getStatus = params.getValue(params.id, 'status');\n      return RenderStatus(getStatus);\n    }\n  },\n  {\n    field: 'isAdmin',\n    type: 'boolean',\n    width: 120,\n    renderCell: (params) => {\n      const getAdmin = params.getValue(params.id, 'isAdmin');\n      return (\n        <Stack alignItems=\"center\" sx={{ width: 1, textAlign: 'center' }}>\n          {getAdmin ? (\n            <Box component={Icon} icon={checkmarkCircle2Fill} sx={{ width: 20, height: 20, color: 'primary.main' }} />\n          ) : (\n            '-'\n          )}\n        </Stack>\n      );\n    }\n  },\n  {\n    field: 'performance',\n    type: 'number',\n    headerName: 'Performance',\n    width: 160,\n    renderCell: (params) => {\n      const value = params.getValue(params.id, 'performance');\n      return (\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ px: 2, width: 1, height: 1 }}>\n          <LinearProgress\n            value={value}\n            variant=\"determinate\"\n            color={(value < 30 && 'error') || (value > 30 && value < 70 && 'warning') || 'primary'}\n            sx={{ width: 1, height: 6 }}\n          />\n          <Typography variant=\"caption\" sx={{ width: 90 }}>\n            {fPercent(value)}\n          </Typography>\n        </Stack>\n      );\n    }\n  },\n  {\n    field: 'action',\n    headerName: ' ',\n    width: 80,\n    align: 'right',\n    sortable: false,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => {\n      const selectedID = params.row.id;\n\n      const handleClick = () => {\n        console.log('selectedID', selectedID);\n      };\n\n      return (\n        <MIconButton onClick={handleClick}>\n          <Box component={Icon} icon={moreVerticalFill} sx={{ width: 20, height: 20 }} />\n        </MIconButton>\n      );\n    }\n  }\n];\n\nconst rows = [...Array(36)].map((_, index) => ({\n  id: mockData.id(index),\n  name: mockData.name.fullName(index),\n  email: mockData.email(index),\n  lastLogin: mockData.time(index),\n  performance: mockData.number.percent(index),\n  rating: mockData.number.rating(index),\n  status: sample(['online', 'away', 'busy']),\n  isAdmin: mockData.boolean(index)\n}));\n\n// ----------------------------------------------------------------------\n\nfunction CustomPagination() {\n  const { state, apiRef } = useGridSlotComponentProps();\n\n  return (\n    <Pagination\n      color=\"primary\"\n      count={state.pagination.pageCount}\n      page={state.pagination.page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nRatingInputValue.propTypes = {\n  applyValue: PropTypes.func.isRequired,\n  item: PropTypes.shape({\n    columnField: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n};\n\nfunction RatingInputValue({ item, applyValue }) {\n  return (\n    <Box sx={{ p: 1, height: 1, alignItems: 'flex-end', display: 'flex' }}>\n      <Rating\n        size=\"small\"\n        precision={0.5}\n        placeholder=\"Filter value\"\n        value={Number(item.value)}\n        onChange={(event, newValue) => {\n          applyValue({ ...item, value: newValue });\n        }}\n      />\n    </Box>\n  );\n}\n\nexport default function DataGridCustom() {\n  if (columns.length > 0) {\n    const ratingColumn = columns.find((column) => column.field === 'rating');\n    const ratingColIndex = columns.findIndex((col) => col.field === 'rating');\n\n    const ratingFilterOperators = getGridNumericColumnOperators().map((operator) => ({\n      ...operator,\n      InputComponent: RatingInputValue\n    }));\n\n    columns[ratingColIndex] = {\n      ...ratingColumn,\n      filterOperators: ratingFilterOperators\n    };\n  }\n\n  return (\n    <DataGrid\n      checkboxSelection\n      disableSelectionOnClick\n      rows={rows}\n      columns={columns}\n      pagination\n      pageSize={10}\n      components={{\n        Toolbar: GridToolbar,\n        Pagination: CustomPagination\n      }}\n    />\n  );\n}\n","// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Container, Stack, Card, CardHeader } from '@material-ui/core';\n// routes\nimport { PATH_PAGE } from '../../../../routes/paths';\n// components\nimport Page from '../../../../components/Page';\nimport HeaderBreadcrumbs from '../../../../components/HeaderBreadcrumbs';\n//\nimport DataGridBasic from './DataGridBasic';\nimport DataGridCustom from './DataGridCustom';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  paddingTop: theme.spacing(11),\n  paddingBottom: theme.spacing(15)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function DataGridComponent() {\n  return (\n    <RootStyle title=\"Components: DataGrid | Minimal-UI\">\n      <Box\n        sx={{\n          pt: 6,\n          pb: 1,\n          mb: 10,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800')\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <HeaderBreadcrumbs\n            heading=\"DataGrid\"\n            links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'DataGrid' }]}\n            moreLink=\"https://material-ui.com/components/data-grid\"\n          />\n        </Container>\n      </Box>\n\n      <Container maxWidth=\"lg\">\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"Basic\" sx={{ mb: 2 }} />\n            <Box sx={{ height: 390 }}>\n              <DataGridBasic />\n            </Box>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Custom\" sx={{ mb: 2 }} />\n            <Box sx={{ height: 720 }}>\n              <DataGridCustom />\n            </Box>\n          </Card>\n        </Stack>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}