{"version":3,"sources":["../../src/index.ts","components/authentication/register/RegisterForm.js","pages/authentication/Register.js"],"names":["upperCaseFirst","input","charAt","toUpperCase","substr","capitalCaseTransform","toLowerCase","capitalCase","options","noCase","delimiter","transform","RegisterForm","register","useAuth","isMountedRef","useIsMountedRef","useSnackbar","enqueueSnackbar","closeSnackbar","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","firstName","min","max","required","lastName","email","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","setErrors","setSubmitting","variant","action","key","size","onClick","icon","closeFill","current","console","error","afterSubmit","message","errors","touched","handleSubmit","isSubmitting","getFieldProps","value","autoComplete","noValidate","Stack","spacing","Alert","severity","direction","xs","sm","TextField","fullWidth","label","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","prev","eyeFill","eyeOffFill","LoadingButton","loading","RootStyle","styled","Page","theme","breakpoints","up","display","SectionStyle","Card","width","maxWidth","flexDirection","justifyContent","margin","ContentStyle","minHeight","padding","Register","method","title","AuthLayout","Link","underline","component","RouterLink","to","PATH_AUTH","login","Typography","sx","px","mt","mb","alt","src","Container","Box","alignItems","flexGrow","gutterBottom","color","Tooltip","height","AuthFirebaseSocial","align","href","textAlign"],"mappings":"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","file":"static/js/126.43e4b7ac.chunk.js","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options,\n  });\n}\n","import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack5';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// material\nimport { Stack, TextField, IconButton, InputAdornment, Alert } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\n//\nimport { MIconButton } from '../../@material-extend';\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterForm() {\n  const { register } = useAuth();\n  const isMountedRef = useIsMountedRef();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('First name required'),\n    lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Last name required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\n      try {\n        await register(values.email, values.password, values.firstName, values.lastName);\n        enqueueSnackbar('Register success', {\n          variant: 'success',\n          action: (key) => (\n            <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\n              <Icon icon={closeFill} />\n            </MIconButton>\n          )\n        });\n        if (isMountedRef.current) {\n          setSubmitting(false);\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMountedRef.current) {\n          setErrors({ afterSubmit: error.message });\n          setSubmitting(false);\n        }\n      }\n    }\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              fullWidth\n              label=\"First name\"\n              {...getFieldProps('firstName')}\n              error={Boolean(touched.firstName && errors.firstName)}\n              helperText={touched.firstName && errors.firstName}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Last name\"\n              {...getFieldProps('lastName')}\n              error={Boolean(touched.lastName && errors.lastName)}\n              helperText={touched.lastName && errors.lastName}\n            />\n          </Stack>\n\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n\n          <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n            Register\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { capitalCase } from 'change-case';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Card, Link, Container, Typography, Tooltip } from '@material-ui/core';\n// hooks\nimport useAuth from '../../hooks/useAuth';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// layouts\nimport AuthLayout from '../../layouts/AuthLayout';\n// components\nimport Page from '../../components/Page';\nimport { MHidden } from '../../components/@material-extend';\nimport { RegisterForm } from '../../components/authentication/register';\nimport AuthFirebaseSocials from '../../components/authentication/AuthFirebaseSocial';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'flex'\n  }\n}));\n\nconst SectionStyle = styled(Card)(({ theme }) => ({\n  width: '100%',\n  maxWidth: 464,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  margin: theme.spacing(2, 0, 2, 2)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n  const { method } = useAuth();\n\n  return (\n    <RootStyle title=\"Register | Minimal-UI\">\n      <AuthLayout>\n        Already have an account? &nbsp;\n        <Link underline=\"none\" variant=\"subtitle2\" component={RouterLink} to={PATH_AUTH.login}>\n          Login\n        </Link>\n      </AuthLayout>\n\n      <MHidden width=\"mdDown\">\n        <SectionStyle>\n          <Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\n            Manage the job more effectively with Minimal\n          </Typography>\n          <img alt=\"register\" src=\"/static/illustrations/illustration_register.png\" />\n        </SectionStyle>\n      </MHidden>\n\n      <Container>\n        <ContentStyle>\n          <Box sx={{ mb: 5, display: 'flex', alignItems: 'center' }}>\n            <Box sx={{ flexGrow: 1 }}>\n              <Typography variant=\"h4\" gutterBottom>\n                Get started absolutely free.\n              </Typography>\n              <Typography sx={{ color: 'text.secondary' }}>Free forever. No credit card needed.</Typography>\n            </Box>\n            <Tooltip title={capitalCase(method)}>\n              <Box component=\"img\" src={`/static/auth/ic_${method}.png`} sx={{ width: 32, height: 32 }} />\n            </Tooltip>\n          </Box>\n\n          {method === 'firebase' && <AuthFirebaseSocials />}\n\n          <RegisterForm />\n\n          <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary', mt: 3 }}>\n            By registering, I agree to Minimal&nbsp;\n            <Link underline=\"always\" color=\"text.primary\" href=\"#\">\n              Terms of Service\n            </Link>\n            &nbsp;and&nbsp;\n            <Link underline=\"always\" color=\"text.primary\" href=\"#\">\n              Privacy Policy\n            </Link>\n            .\n          </Typography>\n\n          <MHidden width=\"smUp\">\n            <Typography variant=\"subtitle2\" sx={{ mt: 3, textAlign: 'center' }}>\n              Already have an account?&nbsp;\n              <Link to={PATH_AUTH.login} component={RouterLink}>\n                Login\n              </Link>\n            </Typography>\n          </MHidden>\n        </ContentStyle>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}